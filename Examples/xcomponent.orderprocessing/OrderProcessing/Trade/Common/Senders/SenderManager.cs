//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace XComponent.Trade.Common.Senders
{
    using System;
    using XComponent.Trade.Common;
    
    
    public class SenderManager
    {
		private static ProcessOrderCreationOrderCreationOnUpTradeProcessorSender m_processOrderCreationOrderCreationOnUpTradeProcessorSender;
        
        public static ProcessOrderCreationOrderCreationOnUpTradeProcessorSender ProcessOrderCreationOrderCreationOnUpTradeProcessorSender
        {
            get
            {
                if ((m_processOrderCreationOrderCreationOnUpTradeProcessorSender == null))
                {
                    m_processOrderCreationOrderCreationOnUpTradeProcessorSender = new ProcessOrderCreationOrderCreationOnUpTradeProcessorSender();
                }
                return m_processOrderCreationOrderCreationOnUpTradeProcessorSender;
            }
        }
		private static ProcessOrderPartialFillOrderExecutionOnUpTradeProcessorSender m_processOrderPartialFillOrderExecutionOnUpTradeProcessorSender;
        
        public static ProcessOrderPartialFillOrderExecutionOnUpTradeProcessorSender ProcessOrderPartialFillOrderExecutionOnUpTradeProcessorSender
        {
            get
            {
                if ((m_processOrderPartialFillOrderExecutionOnUpTradeProcessorSender == null))
                {
                    m_processOrderPartialFillOrderExecutionOnUpTradeProcessorSender = new ProcessOrderPartialFillOrderExecutionOnUpTradeProcessorSender();
                }
                return m_processOrderPartialFillOrderExecutionOnUpTradeProcessorSender;
            }
        }
		private static ExecuteOrderExecutionOnExecutedTradeSender m_executeOrderExecutionOnExecutedTradeSender;
        
        public static ExecuteOrderExecutionOnExecutedTradeSender ExecuteOrderExecutionOnExecutedTradeSender
        {
            get
            {
                if ((m_executeOrderExecutionOnExecutedTradeSender == null))
                {
                    m_executeOrderExecutionOnExecutedTradeSender = new ExecuteOrderExecutionOnExecutedTradeSender();
                }
                return m_executeOrderExecutionOnExecutedTradeSender;
            }
        }
		private static CreateTradeTradeOnWaitingForExecutionTradeSender m_createTradeTradeOnWaitingForExecutionTradeSender;
        
        public static CreateTradeTradeOnWaitingForExecutionTradeSender CreateTradeTradeOnWaitingForExecutionTradeSender
        {
            get
            {
                if ((m_createTradeTradeOnWaitingForExecutionTradeSender == null))
                {
                    m_createTradeTradeOnWaitingForExecutionTradeSender = new CreateTradeTradeOnWaitingForExecutionTradeSender();
                }
                return m_createTradeTradeOnWaitingForExecutionTradeSender;
            }
        }
		private static ProcessOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender m_processOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender;
        
        public static ProcessOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender ProcessOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender
        {
            get
            {
                if ((m_processOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender == null))
                {
                    m_processOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender = new ProcessOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender();
                }
                return m_processOrderPartialFillOrderExecutionOnUpOrderPartialFillProxySender;
            }
        }
		
    }
}
