//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace XComponent.TradeCapture.Common.Senders
{
    using System;
    using XComponent.TradeCapture.Common;
    
    
    public class SenderManager
    {
		private static InitMappingInitOnMappingTransactionSender m_initMappingInitOnMappingTransactionSender;
        
        public static InitMappingInitOnMappingTransactionSender InitMappingInitOnMappingTransactionSender
        {
            get
            {
                if ((m_initMappingInitOnMappingTransactionSender == null))
                {
                    m_initMappingInitOnMappingTransactionSender = new InitMappingInitOnMappingTransactionSender();
                }
                return m_initMappingInitOnMappingTransactionSender;
            }
        }
		private static RejectRejectOnTransactionRejectedTransactionSender m_rejectRejectOnTransactionRejectedTransactionSender;
        
        public static RejectRejectOnTransactionRejectedTransactionSender RejectRejectOnTransactionRejectedTransactionSender
        {
            get
            {
                if ((m_rejectRejectOnTransactionRejectedTransactionSender == null))
                {
                    m_rejectRejectOnTransactionRejectedTransactionSender = new RejectRejectOnTransactionRejectedTransactionSender();
                }
                return m_rejectRejectOnTransactionRejectedTransactionSender;
            }
        }
		private static UpdateAndRetryUpdateAndRetryOnValidationTransactionSender m_updateAndRetryUpdateAndRetryOnValidationTransactionSender;
        
        public static UpdateAndRetryUpdateAndRetryOnValidationTransactionSender UpdateAndRetryUpdateAndRetryOnValidationTransactionSender
        {
            get
            {
                if ((m_updateAndRetryUpdateAndRetryOnValidationTransactionSender == null))
                {
                    m_updateAndRetryUpdateAndRetryOnValidationTransactionSender = new UpdateAndRetryUpdateAndRetryOnValidationTransactionSender();
                }
                return m_updateAndRetryUpdateAndRetryOnValidationTransactionSender;
            }
        }
		private static TimeOutDefaultEventOnTransactionRejectedTransactionSender m_timeOutDefaultEventOnTransactionRejectedTransactionSender;
        
        public static TimeOutDefaultEventOnTransactionRejectedTransactionSender TimeOutDefaultEventOnTransactionRejectedTransactionSender
        {
            get
            {
                if ((m_timeOutDefaultEventOnTransactionRejectedTransactionSender == null))
                {
                    m_timeOutDefaultEventOnTransactionRejectedTransactionSender = new TimeOutDefaultEventOnTransactionRejectedTransactionSender();
                }
                return m_timeOutDefaultEventOnTransactionRejectedTransactionSender;
            }
        }
		private static ErrorErrorOnErrorOnMappingTransactionSender m_errorErrorOnErrorOnMappingTransactionSender;
        
        public static ErrorErrorOnErrorOnMappingTransactionSender ErrorErrorOnErrorOnMappingTransactionSender
        {
            get
            {
                if ((m_errorErrorOnErrorOnMappingTransactionSender == null))
                {
                    m_errorErrorOnErrorOnMappingTransactionSender = new ErrorErrorOnErrorOnMappingTransactionSender();
                }
                return m_errorErrorOnErrorOnMappingTransactionSender;
            }
        }
		private static AcceptedAcceptOnTransactionAcceptedTransactionSender m_acceptedAcceptOnTransactionAcceptedTransactionSender;
        
        public static AcceptedAcceptOnTransactionAcceptedTransactionSender AcceptedAcceptOnTransactionAcceptedTransactionSender
        {
            get
            {
                if ((m_acceptedAcceptOnTransactionAcceptedTransactionSender == null))
                {
                    m_acceptedAcceptOnTransactionAcceptedTransactionSender = new AcceptedAcceptOnTransactionAcceptedTransactionSender();
                }
                return m_acceptedAcceptOnTransactionAcceptedTransactionSender;
            }
        }
		private static ReferentialNotificationInstrumentSnapshotOnMappingTransactionSender m_referentialNotificationInstrumentSnapshotOnMappingTransactionSender;
        
        public static ReferentialNotificationInstrumentSnapshotOnMappingTransactionSender ReferentialNotificationInstrumentSnapshotOnMappingTransactionSender
        {
            get
            {
                if ((m_referentialNotificationInstrumentSnapshotOnMappingTransactionSender == null))
                {
                    m_referentialNotificationInstrumentSnapshotOnMappingTransactionSender = new ReferentialNotificationInstrumentSnapshotOnMappingTransactionSender();
                }
                return m_referentialNotificationInstrumentSnapshotOnMappingTransactionSender;
            }
        }
		private static NewTransactionTransactionOnValidationTransactionSender m_newTransactionTransactionOnValidationTransactionSender;
        
        public static NewTransactionTransactionOnValidationTransactionSender NewTransactionTransactionOnValidationTransactionSender
        {
            get
            {
                if ((m_newTransactionTransactionOnValidationTransactionSender == null))
                {
                    m_newTransactionTransactionOnValidationTransactionSender = new NewTransactionTransactionOnValidationTransactionSender();
                }
                return m_newTransactionTransactionOnValidationTransactionSender;
            }
        }
		private static UpdateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender m_updateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender;
        
        public static UpdateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender UpdateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender
        {
            get
            {
                if ((m_updateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender == null))
                {
                    m_updateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender = new UpdateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender();
                }
                return m_updateReferentialInstrumentOnUpdateReferentialUpdateReferentialSender;
            }
        }
		
    }
}
