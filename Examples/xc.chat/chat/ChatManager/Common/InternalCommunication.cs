//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using XComponent.Engine.Processing;
using XComponent.Common.Processing;
using XComponent.Engine.Processing.Domain;
using XComponent.Common.ApiContext;
using XComponent.Communication;

namespace XComponent.ChatManager.Common
{
    public class InternalCommunication : IInternalCommunication
    {
        private const string ComponentName = "ChatManager";

		private IAgentManager _agentManager;
        private Dictionary<int, EngineAgent> _engineAgentsById = new Dictionary<int, EngineAgent>();
        private Dictionary<int, List<EngineAgent>> _engineAgentsByStateMachine = new Dictionary<int, List<EngineAgent>>();

        public InternalCommunication(IAgentManager agentManager)
        {
            _agentManager = agentManager;
        }
		
        public void Init(string configFile)
        {
			foreach( var engineAgent in _agentManager.FilterEngineAgentForInternalAPI(128610941))
			{
				_engineAgentsById.Add(engineAgent.Id, engineAgent);
				
				foreach( var detail in Agent.getAgentDetails(engineAgent))
				{
					if (detail.Key.Equals(128610941))
					{
						foreach( var stateMachineCode in detail.Value )
						{
							if(!_engineAgentsByStateMachine.ContainsKey(stateMachineCode))
							{
								_engineAgentsByStateMachine.Add(stateMachineCode, new List<EngineAgent>());
							}

							_engineAgentsByStateMachine[stateMachineCode].Add(engineAgent);
						}
					}
				}
			}
        }

		public void Send(Context context, XComponent.ChatManager.UserObject.CreateChatroom evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.CreateChatroom(), IncomingEventType.Transition, HeaderFactory.Create(context, 2, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.ChatManager.UserObject.CreateChatroom evt, string privateTopic = null)
        {
            SendEvent(StdEnum.ChatManager, evt != null ? evt : new XComponent.ChatManager.UserObject.CreateChatroom(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.ChatManager.UserObject.CreateChatroom evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.CreateChatroom(), IncomingEventType.Transition, HeaderFactory.Create(2, (int)stateMachineEnum, 128610941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.ChatManager.UserObject.SentMessage evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.SentMessage(), IncomingEventType.Transition, HeaderFactory.Create(context, 4, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.ChatManager.UserObject.SentMessage evt, string privateTopic = null)
        {
            SendEvent(StdEnum.Chatroom, evt != null ? evt : new XComponent.ChatManager.UserObject.SentMessage(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.ChatManager.UserObject.SentMessage evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.SentMessage(), IncomingEventType.Transition, HeaderFactory.Create(4, (int)stateMachineEnum, 128610941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.ChatManager.UserObject.PublishedMessage evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.PublishedMessage(), IncomingEventType.Transition, HeaderFactory.Create(context, 3, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.ChatManager.UserObject.PublishedMessage evt, string privateTopic = null)
        {
            SendEvent(StdEnum.Chatroom, evt != null ? evt : new XComponent.ChatManager.UserObject.PublishedMessage(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.ChatManager.UserObject.PublishedMessage evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.PublishedMessage(), IncomingEventType.Transition, HeaderFactory.Create(3, (int)stateMachineEnum, 128610941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.ChatManager.UserObject.CloseRoom evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.CloseRoom(), IncomingEventType.Transition, HeaderFactory.Create(context, 1, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.ChatManager.UserObject.CloseRoom evt, string privateTopic = null)
        {
            SendEvent(StdEnum.Chatroom, evt != null ? evt : new XComponent.ChatManager.UserObject.CloseRoom(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.ChatManager.UserObject.CloseRoom evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.ChatManager.UserObject.CloseRoom(), IncomingEventType.Transition, HeaderFactory.Create(1, (int)stateMachineEnum, 128610941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		private void PostOnStateMachine(IncomingEvent incomingEvent, StdEnum stateMachineEnum)
		{
			foreach(var engineAgent in GetEngineAgents(stateMachineEnum))
			{
				Agent.Post(engineAgent, incomingEvent);
			}
		}

		private IEnumerable<EngineAgent> GetEngineAgents(StdEnum stateMachineEnum)
        {
			switch(stateMachineEnum)
			{
				case StdEnum.ChatManager :
					return _engineAgentsByStateMachine[128610941];
				case StdEnum.Chatroom :
					return _engineAgentsByStateMachine[-712757081];
				case StdEnum.PublishedMessage :
					return _engineAgentsByStateMachine[1328902270];
			}

            return new List<EngineAgent>();
        }
    }
}
