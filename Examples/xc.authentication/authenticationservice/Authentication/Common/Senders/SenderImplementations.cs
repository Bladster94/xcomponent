//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using XComponent.Common.ApiContext;
using XComponent.Authentication.Common;

namespace XComponent.Authentication.Common.Senders
{
    public class InitializeDefaultEventOnInitializingAuthenticationSender : AbstractSender, IInitializeDefaultEventOnInitializingAuthenticationSenderInterface
    {
		public void InitializationSuccess(Context context)
		{
			_internalAPI.InitializationSuccess(context, null);
		}

		public void InitializationError(Context context)
		{
			_internalAPI.InitializationError(context, null);
		}


		public void InitializationSuccess(Context context, XComponent.Authentication.UserObject.InitializationSuccess transitionEvent, string privateTopic = null)
		{
			_internalAPI.InitializationSuccess(context, transitionEvent, privateTopic);
		}

		public void InitializationError(Context context, XComponent.Authentication.UserObject.InitializationError transitionEvent, string privateTopic = null)
		{
			_internalAPI.InitializationError(context, transitionEvent, privateTopic);
		}


		public void SendEvent(XComponent.Authentication.UserObject.InitializationSuccess evt)
		{
			_internalAPI.SendEvent(evt, null);
		}

		public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.InitializationSuccess evt)
		{
			_internalAPI.SendEvent(stdEnum, evt, null);
		}

		public void SendEvent(XComponent.Authentication.UserObject.InitializationError evt)
		{
			_internalAPI.SendEvent(evt, null);
		}

		public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.InitializationError evt)
		{
			_internalAPI.SendEvent(stdEnum, evt, null);
		}

    }

    public class InitializationSuccessInitializationSuccessOnUpAuthenticationSender : AbstractSender, IInitializationSuccessInitializationSuccessOnUpAuthenticationSenderInterface
    {
		public void CreateHeartBeat(Context context, string privateTopic = null)
		{
			_internalAPI.CreateHeartBeat(context, privateTopic);
		}


		public void CreateHeartBeat(Context context, XComponent.Authentication.UserObject.CreateHeartBeat transitionEvent, string privateTopic = null)
		{
			_internalAPI.CreateHeartBeat(context, transitionEvent, privateTopic);
		}


		public void SendEvent(XComponent.Authentication.UserObject.CreateHeartBeat evt, string privateTopic = null)
		{
			_internalAPI.SendEvent(evt, privateTopic);
		}

		public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.CreateHeartBeat evt, string privateTopic = null)
		{
			_internalAPI.SendEvent(stdEnum, evt, privateTopic);
		}

    }

    public class CheckLoginCheckLoginOnCheckingLoginLoginStatusSender : AbstractSender, ICheckLoginCheckLoginOnCheckingLoginLoginStatusSenderInterface
    {
		public void LoginSuccess(Context context)
		{
			_internalAPI.LoginSuccess(context, null);
		}

		public void LoginError(Context context)
		{
			_internalAPI.LoginError(context, null);
		}


		public void LoginSuccess(Context context, XComponent.Authentication.UserObject.LoginSuccess transitionEvent, string privateTopic = null)
		{
			_internalAPI.LoginSuccess(context, transitionEvent, privateTopic);
		}

		public void LoginError(Context context, XComponent.Authentication.UserObject.LoginError transitionEvent, string privateTopic = null)
		{
			_internalAPI.LoginError(context, transitionEvent, privateTopic);
		}


		public void SendEvent(XComponent.Authentication.UserObject.LoginSuccess evt)
		{
			_internalAPI.SendEvent(evt, null);
		}

		public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.LoginSuccess evt)
		{
			_internalAPI.SendEvent(stdEnum, evt, null);
		}

		public void SendEvent(XComponent.Authentication.UserObject.LoginError evt)
		{
			_internalAPI.SendEvent(evt, null);
		}

		public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.LoginError evt)
		{
			_internalAPI.SendEvent(stdEnum, evt, null);
		}

    }

}