//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace XComponent.Authentication.Common.Senders
{
    using System;
    using XComponent.Common.ApiContext;
    using XComponent.Authentication.Common;

	public class InitializeDefaultEventOnInitializingAuthenticationSender : AbstractSender, IInitializeDefaultEventOnInitializingAuthenticationSenderInterface
    {
		public void InitializationSuccess(Context context)
			{
				internalAPI.InitializationSuccess(context);
			}
		public void InitializationError(Context context)
			{
				internalAPI.InitializationError(context);
			}
		
		
		public void InitializationSuccess(Context context, XComponent.Authentication.UserObject.InitializationSuccess transitionEvent)
			{
				internalAPI.InitializationSuccess(context, transitionEvent);
			}
		public void InitializationError(Context context, XComponent.Authentication.UserObject.InitializationError transitionEvent)
			{
				internalAPI.InitializationError(context, transitionEvent);
			}
		
		
		public void SendEvent(XComponent.Authentication.UserObject.InitializationSuccess evt)
			{
				internalAPI.SendEvent(evt);
			}
			
			public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.InitializationSuccess evt)
			{
				internalAPI.SendEvent(stdEnum, evt);
			}
		public void SendEvent(XComponent.Authentication.UserObject.InitializationError evt)
			{
				internalAPI.SendEvent(evt);
			}
			
			public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.InitializationError evt)
			{
				internalAPI.SendEvent(stdEnum, evt);
			}
		
    }
	public class InitializationSuccessInitializationSuccessOnUpAuthenticationSender : AbstractSender, IInitializationSuccessInitializationSuccessOnUpAuthenticationSenderInterface
    {
		public void CreateHeartBeat(Context context)
			{
				internalAPI.CreateHeartBeat(context);
			}
		
		
		public void CreateHeartBeat(Context context, XComponent.Authentication.UserObject.CreateHeartBeat transitionEvent)
			{
				internalAPI.CreateHeartBeat(context, transitionEvent);
			}
		
		
		public void SendEvent(XComponent.Authentication.UserObject.CreateHeartBeat evt)
			{
				internalAPI.SendEvent(evt);
			}
			
			public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.CreateHeartBeat evt)
			{
				internalAPI.SendEvent(stdEnum, evt);
			}
		
    }
	public class CheckLoginCheckLoginOnCheckingLoginLoginStatusSender : AbstractSender, ICheckLoginCheckLoginOnCheckingLoginLoginStatusSenderInterface
    {
		public void LoginSuccess(Context context)
			{
				internalAPI.LoginSuccess(context);
			}
		public void LoginError(Context context)
			{
				internalAPI.LoginError(context);
			}
		
		
		public void LoginSuccess(Context context, XComponent.Authentication.UserObject.LoginSuccess transitionEvent)
			{
				internalAPI.LoginSuccess(context, transitionEvent);
			}
		public void LoginError(Context context, XComponent.Authentication.UserObject.LoginError transitionEvent)
			{
				internalAPI.LoginError(context, transitionEvent);
			}
		
		
		public void SendEvent(XComponent.Authentication.UserObject.LoginSuccess evt)
			{
				internalAPI.SendEvent(evt);
			}
			
			public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.LoginSuccess evt)
			{
				internalAPI.SendEvent(stdEnum, evt);
			}
		public void SendEvent(XComponent.Authentication.UserObject.LoginError evt)
			{
				internalAPI.SendEvent(evt);
			}
			
			public void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.LoginError evt)
			{
				internalAPI.SendEvent(stdEnum, evt);
			}
		
    }
	
}
