//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using XComponent.Common.ApiContext;
using XComponent.Authentication.Common;

namespace XComponent.Authentication.Common.Senders
{
    public interface IInitializeDefaultEventOnInitializingAuthenticationSenderInterface
    {
		void InitializationSuccess(Context context);

		void InitializationError(Context context);


		void InitializationSuccess(Context context, XComponent.Authentication.UserObject.InitializationSuccess transitionEvent, string privateTopic = null);

		void InitializationError(Context context, XComponent.Authentication.UserObject.InitializationError transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Authentication.UserObject.InitializationSuccess evt);

		void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.InitializationSuccess evt);

		void SendEvent(XComponent.Authentication.UserObject.InitializationError evt);

		void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.InitializationError evt);

    }

    public interface IInitializationSuccessInitializationSuccessOnUpAuthenticationSenderInterface
    {
		void CreateHeartBeat(Context context, string privateTopic = null);


		void CreateHeartBeat(Context context, XComponent.Authentication.UserObject.CreateHeartBeat transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Authentication.UserObject.CreateHeartBeat evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.CreateHeartBeat evt, string privateTopic = null);

    }

    public interface ICheckLoginCheckLoginOnCheckingLoginLoginStatusSenderInterface
    {
		void LoginSuccess(Context context);

		void LoginError(Context context);


		void LoginSuccess(Context context, XComponent.Authentication.UserObject.LoginSuccess transitionEvent, string privateTopic = null);

		void LoginError(Context context, XComponent.Authentication.UserObject.LoginError transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Authentication.UserObject.LoginSuccess evt);

		void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.LoginSuccess evt);

		void SendEvent(XComponent.Authentication.UserObject.LoginError evt);

		void SendEvent(StdEnum stdEnum, XComponent.Authentication.UserObject.LoginError evt);

    }

}