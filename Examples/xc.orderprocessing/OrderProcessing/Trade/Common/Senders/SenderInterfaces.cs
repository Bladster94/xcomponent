//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace XComponent.Trade.Common.Senders
{
    using System;
    using XComponent.Common.ApiContext;
    using XComponent.Trade.Common;
    
	public interface IProcessOrderCreationOrderCreationOnUpTradeProcessorSenderInterface
    {
		void CreateTrade(Context context);
		void ExecuteTrade(Context context);
		void Execute(Context context);
		
		
		void CreateTrade(Context context, XComponent.Trade.UserObject.Trade transitionEvent);
		void ExecuteTrade(Context context, XComponent.Trade.UserObject.TradeExecution transitionEvent);
		void Execute(Context context, XComponent.Trade.UserObject.TradeExecution transitionEvent);
		
		
		void SendEvent(XComponent.Trade.UserObject.Trade evt);
			void SendEvent(StdEnum stdEnum, XComponent.Trade.UserObject.Trade evt);
		void SendEvent(XComponent.Trade.UserObject.TradeExecution evt);
			void SendEvent(StdEnum stdEnum, XComponent.Trade.UserObject.TradeExecution evt);
		
    }
	public interface IExecuteTradeTradeExecutionOnUpTradeProcessorSenderInterface
    {
		void CreateTrade(Context context);
		void ExecuteTrade(Context context);
		void Execute(Context context);
		
		
		void CreateTrade(Context context, XComponent.Trade.UserObject.Trade transitionEvent);
		void ExecuteTrade(Context context, XComponent.Trade.UserObject.TradeExecution transitionEvent);
		void Execute(Context context, XComponent.Trade.UserObject.TradeExecution transitionEvent);
		
		
		void SendEvent(XComponent.Trade.UserObject.Trade evt);
			void SendEvent(StdEnum stdEnum, XComponent.Trade.UserObject.Trade evt);
		void SendEvent(XComponent.Trade.UserObject.TradeExecution evt);
			void SendEvent(StdEnum stdEnum, XComponent.Trade.UserObject.TradeExecution evt);
		
    }
	public interface IProcessOrderExecutionOrderExecutionOnUpTradeProcessorSenderInterface
    {
		void CreateTrade(Context context);
		void ExecuteTrade(Context context);
		void Execute(Context context);
		
		
		void CreateTrade(Context context, XComponent.Trade.UserObject.Trade transitionEvent);
		void ExecuteTrade(Context context, XComponent.Trade.UserObject.TradeExecution transitionEvent);
		void Execute(Context context, XComponent.Trade.UserObject.TradeExecution transitionEvent);
		
		
		void SendEvent(XComponent.Trade.UserObject.Trade evt);
			void SendEvent(StdEnum stdEnum, XComponent.Trade.UserObject.Trade evt);
		void SendEvent(XComponent.Trade.UserObject.TradeExecution evt);
			void SendEvent(StdEnum stdEnum, XComponent.Trade.UserObject.TradeExecution evt);
		
    }
	public interface IExecuteTradeExecutionOnExecutedTradeSenderInterface
    {
		
		
		
		
		
    }
	public interface ICreateTradeTradeOnWaitingForExecutionTradeSenderInterface
    {
		
		
		
		
		
    }
	
}
