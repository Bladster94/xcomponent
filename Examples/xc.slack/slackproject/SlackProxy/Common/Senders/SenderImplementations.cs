//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using XComponent.Common.ApiContext;
using XComponent.SlackProxy.Common;

namespace XComponent.SlackProxy.Common.Senders
{
    public class SendMessageSendMessageOnPublishingPublishMessageSender : AbstractSender, ISendMessageSendMessageOnPublishingPublishMessageSenderInterface
    {
		public void Success(Context context)
		{
			_internalAPI.Success(context, null);
		}

		public void Error(Context context)
		{
			_internalAPI.Error(context, null);
		}


		public void Success(Context context, XComponent.SlackProxy.UserObject.Success transitionEvent, string privateTopic = null)
		{
			_internalAPI.Success(context, transitionEvent, privateTopic);
		}

		public void Error(Context context, XComponent.SlackProxy.UserObject.Error transitionEvent, string privateTopic = null)
		{
			_internalAPI.Error(context, transitionEvent, privateTopic);
		}


		public void SendEvent(XComponent.SlackProxy.UserObject.Success evt)
		{
			_internalAPI.SendEvent(evt, null);
		}

		public void SendEvent(StdEnum stdEnum, XComponent.SlackProxy.UserObject.Success evt)
		{
			_internalAPI.SendEvent(stdEnum, evt, null);
		}

		public void SendEvent(XComponent.SlackProxy.UserObject.Error evt)
		{
			_internalAPI.SendEvent(evt, null);
		}

		public void SendEvent(StdEnum stdEnum, XComponent.SlackProxy.UserObject.Error evt)
		{
			_internalAPI.SendEvent(stdEnum, evt, null);
		}

    }

}