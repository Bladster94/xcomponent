//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using XComponent.Engine.Processing;
using XComponent.Common.Processing;
using XComponent.Engine.Processing.Domain;
using XComponent.Common.ApiContext;
using XComponent.Communication;

namespace XComponent.SwaggerPetstore.Common
{
    public class InternalCommunication : IInternalCommunication
    {
        private const string ComponentName = "SwaggerPetstore";

		private IAgentManager _agentManager;
        private Dictionary<int, EngineAgent> _engineAgentsById = new Dictionary<int, EngineAgent>();
        private Dictionary<int, List<EngineAgent>> _engineAgentsByStateMachine = new Dictionary<int, List<EngineAgent>>();

        public InternalCommunication(IAgentManager agentManager)
        {
            _agentManager = agentManager;
        }
		
        public void Init(string configFile)
        {
			foreach( var engineAgent in _agentManager.FilterEngineAgentForInternalAPI(-1217457941))
			{
				_engineAgentsById.Add(engineAgent.Id, engineAgent);
				
				foreach( var detail in Agent.getAgentDetails(engineAgent))
				{
					if (detail.Key.Equals(-1217457941))
					{
						foreach( var stateMachineCode in detail.Value )
						{
							if(!_engineAgentsByStateMachine.ContainsKey(stateMachineCode))
							{
								_engineAgentsByStateMachine.Add(stateMachineCode, new List<EngineAgent>());
							}

							_engineAgentsByStateMachine[stateMachineCode].Add(engineAgent);
						}
					}
				}
			}
        }

		public void Send(Context context, XComponent.Common.Event.DefaultEvent evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), IncomingEventType.Transition, HeaderFactory.Create(context, 6, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.Common.Event.DefaultEvent evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.AddPetOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.UpdatePetOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.FindPetsByStatusOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.FindPetsByTagsOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.GetPetByIdOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.UpdatePetWithFormOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.DeletePetOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.UploadFileOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.GetInventoryOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.PlaceOrderOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.GetOrderByIdOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.DeleteOrderOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.CreateUserOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.CreateUsersWithArrayInputOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.CreateUsersWithListInputOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.LoginUserOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.LogoutUserOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.GetUserByNameOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.UpdateUserOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
            SendEvent(StdEnum.DeleteUserOperation, evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.Common.Event.DefaultEvent evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.Common.Event.DefaultEvent(), IncomingEventType.Transition, HeaderFactory.Create(6, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.AddPet evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.AddPet(), IncomingEventType.Transition, HeaderFactory.Create(context, 8, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.AddPet evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.AddPet(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.AddPet evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.AddPet(), IncomingEventType.Transition, HeaderFactory.Create(8, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.AddPetOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.AddPetOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 9, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.AddPetOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.AddPetOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.AddPetOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.AddPetOperation(), IncomingEventType.Transition, HeaderFactory.Create(9, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UpdatePet evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePet(), IncomingEventType.Transition, HeaderFactory.Create(context, 50, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdatePet evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePet(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UpdatePet evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePet(), IncomingEventType.Transition, HeaderFactory.Create(50, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UpdatePetOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 51, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdatePetOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UpdatePetOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetOperation(), IncomingEventType.Transition, HeaderFactory.Create(51, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.FindPetsByStatus evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByStatus(), IncomingEventType.Transition, HeaderFactory.Create(context, 23, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.FindPetsByStatus evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByStatus(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.FindPetsByStatus evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByStatus(), IncomingEventType.Transition, HeaderFactory.Create(23, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 24, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation(), IncomingEventType.Transition, HeaderFactory.Create(24, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.FindPetsByTags evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByTags(), IncomingEventType.Transition, HeaderFactory.Create(context, 25, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.FindPetsByTags evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByTags(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.FindPetsByTags evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByTags(), IncomingEventType.Transition, HeaderFactory.Create(25, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 26, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation(), IncomingEventType.Transition, HeaderFactory.Create(26, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetPetById evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetPetById(), IncomingEventType.Transition, HeaderFactory.Create(context, 31, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetPetById evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetPetById(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetPetById evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetPetById(), IncomingEventType.Transition, HeaderFactory.Create(31, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 32, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation(), IncomingEventType.Transition, HeaderFactory.Create(32, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UpdatePetWithForm evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetWithForm(), IncomingEventType.Transition, HeaderFactory.Create(context, 52, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdatePetWithForm evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetWithForm(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UpdatePetWithForm evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetWithForm(), IncomingEventType.Transition, HeaderFactory.Create(52, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 53, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation(), IncomingEventType.Transition, HeaderFactory.Create(53, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.DeletePet evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeletePet(), IncomingEventType.Transition, HeaderFactory.Create(context, 18, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.DeletePet evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeletePet(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.DeletePet evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeletePet(), IncomingEventType.Transition, HeaderFactory.Create(18, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.DeletePetOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeletePetOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 19, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.DeletePetOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeletePetOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.DeletePetOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeletePetOperation(), IncomingEventType.Transition, HeaderFactory.Create(19, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UploadFile evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UploadFile(), IncomingEventType.Transition, HeaderFactory.Create(context, 56, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UploadFile evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UploadFile(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UploadFile evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UploadFile(), IncomingEventType.Transition, HeaderFactory.Create(56, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UploadFileOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UploadFileOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 57, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UploadFileOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UploadFileOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UploadFileOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UploadFileOperation(), IncomingEventType.Transition, HeaderFactory.Create(57, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetInventory evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetInventory(), IncomingEventType.Transition, HeaderFactory.Create(context, 27, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetInventory evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetInventory(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetInventory evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetInventory(), IncomingEventType.Transition, HeaderFactory.Create(27, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetInventoryOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetInventoryOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 28, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetInventoryOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetInventoryOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetInventoryOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetInventoryOperation(), IncomingEventType.Transition, HeaderFactory.Create(28, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.PlaceOrder evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.PlaceOrder(), IncomingEventType.Transition, HeaderFactory.Create(context, 46, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.PlaceOrder evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.PlaceOrder(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.PlaceOrder evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.PlaceOrder(), IncomingEventType.Transition, HeaderFactory.Create(46, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 47, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation(), IncomingEventType.Transition, HeaderFactory.Create(47, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetOrderById evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetOrderById(), IncomingEventType.Transition, HeaderFactory.Create(context, 29, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetOrderById evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetOrderById(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetOrderById evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetOrderById(), IncomingEventType.Transition, HeaderFactory.Create(29, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 30, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation(), IncomingEventType.Transition, HeaderFactory.Create(30, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.DeleteOrder evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteOrder(), IncomingEventType.Transition, HeaderFactory.Create(context, 16, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.DeleteOrder evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteOrder(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.DeleteOrder evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteOrder(), IncomingEventType.Transition, HeaderFactory.Create(16, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 17, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation(), IncomingEventType.Transition, HeaderFactory.Create(17, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.CreateUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUser(), IncomingEventType.Transition, HeaderFactory.Create(context, 10, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUser evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUser(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.CreateUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUser(), IncomingEventType.Transition, HeaderFactory.Create(10, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.CreateUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 11, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUserOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUserOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.CreateUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(11, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInput evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInput(), IncomingEventType.Transition, HeaderFactory.Create(context, 12, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInput evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInput(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInput evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInput(), IncomingEventType.Transition, HeaderFactory.Create(12, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 13, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation(), IncomingEventType.Transition, HeaderFactory.Create(13, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInput evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInput(), IncomingEventType.Transition, HeaderFactory.Create(context, 14, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInput evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInput(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInput evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInput(), IncomingEventType.Transition, HeaderFactory.Create(14, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 15, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation(), IncomingEventType.Transition, HeaderFactory.Create(15, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.LoginUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LoginUser(), IncomingEventType.Transition, HeaderFactory.Create(context, 35, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.LoginUser evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LoginUser(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.LoginUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LoginUser(), IncomingEventType.Transition, HeaderFactory.Create(35, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.LoginUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LoginUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 36, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.LoginUserOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LoginUserOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.LoginUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LoginUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(36, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.LogoutUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LogoutUser(), IncomingEventType.Transition, HeaderFactory.Create(context, 37, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.LogoutUser evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LogoutUser(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.LogoutUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LogoutUser(), IncomingEventType.Transition, HeaderFactory.Create(37, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.LogoutUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LogoutUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 38, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.LogoutUserOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LogoutUserOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.LogoutUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.LogoutUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(38, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetUserByName evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetUserByName(), IncomingEventType.Transition, HeaderFactory.Create(context, 33, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetUserByName evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetUserByName(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetUserByName evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetUserByName(), IncomingEventType.Transition, HeaderFactory.Create(33, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 34, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation(), IncomingEventType.Transition, HeaderFactory.Create(34, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UpdateUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdateUser(), IncomingEventType.Transition, HeaderFactory.Create(context, 54, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdateUser evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdateUser(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UpdateUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdateUser(), IncomingEventType.Transition, HeaderFactory.Create(54, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.UpdateUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdateUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 55, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdateUserOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdateUserOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.UpdateUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.UpdateUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(55, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.DeleteUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteUser(), IncomingEventType.Transition, HeaderFactory.Create(context, 20, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.DeleteUser evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteUser(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.DeleteUser evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteUser(), IncomingEventType.Transition, HeaderFactory.Create(20, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.DeleteUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(context, 21, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.DeleteUserOperation evt, string privateTopic = null)
        {
            SendEvent(StdEnum.SwaggerPetstore, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteUserOperation(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.DeleteUserOperation evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.DeleteUserOperation(), IncomingEventType.Transition, HeaderFactory.Create(21, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), IncomingEventType.Transition, HeaderFactory.Create(context, 48, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt, string privateTopic = null)
        {
            SendEvent(StdEnum.AddPetOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.UpdatePetOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.FindPetsByStatusOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.FindPetsByTagsOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.GetPetByIdOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.UpdatePetWithFormOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.DeletePetOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.UploadFileOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.GetInventoryOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.PlaceOrderOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.GetOrderByIdOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.DeleteOrderOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.CreateUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.CreateUsersWithArrayInputOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.CreateUsersWithListInputOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.LoginUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.LogoutUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.GetUserByNameOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.UpdateUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
            SendEvent(StdEnum.DeleteUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.SuccessResponse(), IncomingEventType.Transition, HeaderFactory.Create(48, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		public void Send(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), IncomingEventType.Transition, HeaderFactory.Create(context, 22, privateTopic));
            Agent.Post(_engineAgentsById[context.AgentId], incomingEvent);
        }
        
		public void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt, string privateTopic = null)
        {
            SendEvent(StdEnum.AddPetOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.UpdatePetOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.FindPetsByStatusOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.FindPetsByTagsOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.GetPetByIdOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.UpdatePetWithFormOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.DeletePetOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.UploadFileOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.GetInventoryOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.PlaceOrderOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.GetOrderByIdOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.DeleteOrderOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.CreateUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.CreateUsersWithArrayInputOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.CreateUsersWithListInputOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.LoginUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.LogoutUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.GetUserByNameOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.UpdateUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
            SendEvent(StdEnum.DeleteUserOperation, evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), privateTopic);
		}

		public void SendEvent(StdEnum stateMachineEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt, string privateTopic = null)
        {
            var incomingEvent = new IncomingEvent(evt != null ? evt : new XComponent.SwaggerPetstore.UserObject.ErrorResponse(), IncomingEventType.Transition, HeaderFactory.Create(22, (int)stateMachineEnum, -1217457941, privateTopic));
			PostOnStateMachine(incomingEvent, stateMachineEnum);
        }

		private void PostOnStateMachine(IncomingEvent incomingEvent, StdEnum stateMachineEnum)
		{
			foreach(var engineAgent in GetEngineAgents(stateMachineEnum))
			{
				Agent.Post(engineAgent, incomingEvent);
			}
		}

		private IEnumerable<EngineAgent> GetEngineAgents(StdEnum stateMachineEnum)
        {
			switch(stateMachineEnum)
			{
				case StdEnum.SwaggerPetstore :
					return _engineAgentsByStateMachine[-1217457941];
				case StdEnum.AddPetOperation :
					return _engineAgentsByStateMachine[-1573098133];
				case StdEnum.UpdatePetOperation :
					return _engineAgentsByStateMachine[-1548009360];
				case StdEnum.FindPetsByStatusOperation :
					return _engineAgentsByStateMachine[441322543];
				case StdEnum.FindPetsByTagsOperation :
					return _engineAgentsByStateMachine[715370505];
				case StdEnum.GetPetByIdOperation :
					return _engineAgentsByStateMachine[1341262500];
				case StdEnum.UpdatePetWithFormOperation :
					return _engineAgentsByStateMachine[-304199001];
				case StdEnum.DeletePetOperation :
					return _engineAgentsByStateMachine[-2038525811];
				case StdEnum.UploadFileOperation :
					return _engineAgentsByStateMachine[681824184];
				case StdEnum.GetInventoryOperation :
					return _engineAgentsByStateMachine[-27939533];
				case StdEnum.PlaceOrderOperation :
					return _engineAgentsByStateMachine[1641275182];
				case StdEnum.GetOrderByIdOperation :
					return _engineAgentsByStateMachine[-1136586326];
				case StdEnum.DeleteOrderOperation :
					return _engineAgentsByStateMachine[-1736304006];
				case StdEnum.CreateUserOperation :
					return _engineAgentsByStateMachine[-1885035300];
				case StdEnum.CreateUsersWithArrayInputOperation :
					return _engineAgentsByStateMachine[1610894133];
				case StdEnum.CreateUsersWithListInputOperation :
					return _engineAgentsByStateMachine[-778049146];
				case StdEnum.LoginUserOperation :
					return _engineAgentsByStateMachine[2145862436];
				case StdEnum.LogoutUserOperation :
					return _engineAgentsByStateMachine[1845274015];
				case StdEnum.GetUserByNameOperation :
					return _engineAgentsByStateMachine[-1901015653];
				case StdEnum.UpdateUserOperation :
					return _engineAgentsByStateMachine[-752139183];
				case StdEnum.DeleteUserOperation :
					return _engineAgentsByStateMachine[-647013823];
			}

            return new List<EngineAgent>();
        }
    }
}
