//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by XCTools.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using XComponent.Common.ApiContext;
using XComponent.SwaggerPetstore.Common;

namespace XComponent.SwaggerPetstore.Common.Senders
{
    public interface IInitDefaultEventOnUpSwaggerPetstoreSenderInterface
    {


    }

    public interface IAddPetAddPetOnUpSwaggerPetstoreSenderInterface
    {
		void CreateAddPetHttpRequest(Context context, string privateTopic = null);


		void CreateAddPetHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.AddPetOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.AddPetOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.AddPetOperation evt, string privateTopic = null);

    }

    public interface IUpdatePetUpdatePetOnUpSwaggerPetstoreSenderInterface
    {
		void CreateUpdatePetHttpRequest(Context context, string privateTopic = null);


		void CreateUpdatePetHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.UpdatePetOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdatePetOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.UpdatePetOperation evt, string privateTopic = null);

    }

    public interface IFindPetsByStatusFindPetsByStatusOnUpSwaggerPetstoreSenderInterface
    {
		void CreateFindPetsByStatusHttpRequest(Context context, string privateTopic = null);


		void CreateFindPetsByStatusHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.FindPetsByStatusOperation evt, string privateTopic = null);

    }

    public interface IFindPetsByTagsFindPetsByTagsOnUpSwaggerPetstoreSenderInterface
    {
		void CreateFindPetsByTagsHttpRequest(Context context, string privateTopic = null);


		void CreateFindPetsByTagsHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.FindPetsByTagsOperation evt, string privateTopic = null);

    }

    public interface IGetPetByIdGetPetByIdOnUpSwaggerPetstoreSenderInterface
    {
		void CreateGetPetByIdHttpRequest(Context context, string privateTopic = null);


		void CreateGetPetByIdHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.GetPetByIdOperation evt, string privateTopic = null);

    }

    public interface IUpdatePetWithFormUpdatePetWithFormOnUpSwaggerPetstoreSenderInterface
    {
		void CreateUpdatePetWithFormHttpRequest(Context context, string privateTopic = null);


		void CreateUpdatePetWithFormHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.UpdatePetWithFormOperation evt, string privateTopic = null);

    }

    public interface IDeletePetDeletePetOnUpSwaggerPetstoreSenderInterface
    {
		void CreateDeletePetHttpRequest(Context context, string privateTopic = null);


		void CreateDeletePetHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.DeletePetOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.DeletePetOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.DeletePetOperation evt, string privateTopic = null);

    }

    public interface IUploadFileUploadFileOnUpSwaggerPetstoreSenderInterface
    {
		void CreateUploadFileHttpRequest(Context context, string privateTopic = null);


		void CreateUploadFileHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.UploadFileOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.UploadFileOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.UploadFileOperation evt, string privateTopic = null);

    }

    public interface IGetInventoryGetInventoryOnUpSwaggerPetstoreSenderInterface
    {
		void CreateGetInventoryHttpRequest(Context context, string privateTopic = null);


		void CreateGetInventoryHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.GetInventoryOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.GetInventoryOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.GetInventoryOperation evt, string privateTopic = null);

    }

    public interface IPlaceOrderPlaceOrderOnUpSwaggerPetstoreSenderInterface
    {
		void CreatePlaceOrderHttpRequest(Context context, string privateTopic = null);


		void CreatePlaceOrderHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.PlaceOrderOperation evt, string privateTopic = null);

    }

    public interface IGetOrderByIdGetOrderByIdOnUpSwaggerPetstoreSenderInterface
    {
		void CreateGetOrderByIdHttpRequest(Context context, string privateTopic = null);


		void CreateGetOrderByIdHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.GetOrderByIdOperation evt, string privateTopic = null);

    }

    public interface IDeleteOrderDeleteOrderOnUpSwaggerPetstoreSenderInterface
    {
		void CreateDeleteOrderHttpRequest(Context context, string privateTopic = null);


		void CreateDeleteOrderHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.DeleteOrderOperation evt, string privateTopic = null);

    }

    public interface ICreateUserCreateUserOnUpSwaggerPetstoreSenderInterface
    {
		void CreateCreateUserHttpRequest(Context context, string privateTopic = null);


		void CreateCreateUserHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.CreateUserOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUserOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.CreateUserOperation evt, string privateTopic = null);

    }

    public interface ICreateUsersWithArrayInputCreateUsersWithArrayInputOnUpSwaggerPetstoreSenderInterface
    {
		void CreateCreateUsersWithArrayInputHttpRequest(Context context, string privateTopic = null);


		void CreateCreateUsersWithArrayInputHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.CreateUsersWithArrayInputOperation evt, string privateTopic = null);

    }

    public interface ICreateUsersWithListInputCreateUsersWithListInputOnUpSwaggerPetstoreSenderInterface
    {
		void CreateCreateUsersWithListInputHttpRequest(Context context, string privateTopic = null);


		void CreateCreateUsersWithListInputHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.CreateUsersWithListInputOperation evt, string privateTopic = null);

    }

    public interface ILoginUserLoginUserOnUpSwaggerPetstoreSenderInterface
    {
		void CreateLoginUserHttpRequest(Context context, string privateTopic = null);


		void CreateLoginUserHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.LoginUserOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.LoginUserOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.LoginUserOperation evt, string privateTopic = null);

    }

    public interface ILogoutUserLogoutUserOnUpSwaggerPetstoreSenderInterface
    {
		void CreateLogoutUserHttpRequest(Context context, string privateTopic = null);


		void CreateLogoutUserHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.LogoutUserOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.LogoutUserOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.LogoutUserOperation evt, string privateTopic = null);

    }

    public interface IGetUserByNameGetUserByNameOnUpSwaggerPetstoreSenderInterface
    {
		void CreateGetUserByNameHttpRequest(Context context, string privateTopic = null);


		void CreateGetUserByNameHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.GetUserByNameOperation evt, string privateTopic = null);

    }

    public interface IUpdateUserUpdateUserOnUpSwaggerPetstoreSenderInterface
    {
		void CreateUpdateUserHttpRequest(Context context, string privateTopic = null);


		void CreateUpdateUserHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.UpdateUserOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.UpdateUserOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.UpdateUserOperation evt, string privateTopic = null);

    }

    public interface IDeleteUserDeleteUserOnUpSwaggerPetstoreSenderInterface
    {
		void CreateDeleteUserHttpRequest(Context context, string privateTopic = null);


		void CreateDeleteUserHttpRequest(Context context, XComponent.SwaggerPetstore.UserObject.DeleteUserOperation transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.SwaggerPetstore.UserObject.DeleteUserOperation evt, string privateTopic = null);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.DeleteUserOperation evt, string privateTopic = null);

    }

    public interface ICreateAddPetHttpRequestAddPetOperationOnSendingRequestAddPetOperationSenderInterface
    {

		void SendRequest_AddPetOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_AddPetOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_AddPetOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateUpdatePetHttpRequestUpdatePetOperationOnSendingRequestUpdatePetOperationSenderInterface
    {

		void SendRequest_UpdatePetOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_UpdatePetOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_UpdatePetOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateFindPetsByStatusHttpRequestFindPetsByStatusOperationOnSendingRequestFindPetsByStatusOperationSenderInterface
    {

		void SendRequest_FindPetsByStatusOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_FindPetsByStatusOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_FindPetsByStatusOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateFindPetsByTagsHttpRequestFindPetsByTagsOperationOnSendingRequestFindPetsByTagsOperationSenderInterface
    {

		void SendRequest_FindPetsByTagsOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_FindPetsByTagsOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_FindPetsByTagsOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateGetPetByIdHttpRequestGetPetByIdOperationOnSendingRequestGetPetByIdOperationSenderInterface
    {

		void SendRequest_GetPetByIdOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_GetPetByIdOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_GetPetByIdOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateUpdatePetWithFormHttpRequestUpdatePetWithFormOperationOnSendingRequestUpdatePetWithFormOperationSenderInterface
    {

		void SendRequest_UpdatePetWithFormOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_UpdatePetWithFormOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_UpdatePetWithFormOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateDeletePetHttpRequestDeletePetOperationOnSendingRequestDeletePetOperationSenderInterface
    {

		void SendRequest_DeletePetOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_DeletePetOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_DeletePetOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateUploadFileHttpRequestUploadFileOperationOnSendingRequestUploadFileOperationSenderInterface
    {

		void SendRequest_UploadFileOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_UploadFileOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_UploadFileOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateGetInventoryHttpRequestGetInventoryOperationOnSendingRequestGetInventoryOperationSenderInterface
    {

		void SendRequest_GetInventoryOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_GetInventoryOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_GetInventoryOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreatePlaceOrderHttpRequestPlaceOrderOperationOnSendingRequestPlaceOrderOperationSenderInterface
    {

		void SendRequest_PlaceOrderOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_PlaceOrderOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_PlaceOrderOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateGetOrderByIdHttpRequestGetOrderByIdOperationOnSendingRequestGetOrderByIdOperationSenderInterface
    {

		void SendRequest_GetOrderByIdOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_GetOrderByIdOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_GetOrderByIdOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateDeleteOrderHttpRequestDeleteOrderOperationOnSendingRequestDeleteOrderOperationSenderInterface
    {

		void SendRequest_DeleteOrderOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_DeleteOrderOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_DeleteOrderOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateCreateUserHttpRequestCreateUserOperationOnSendingRequestCreateUserOperationSenderInterface
    {

		void SendRequest_CreateUserOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_CreateUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_CreateUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateCreateUsersWithArrayInputHttpRequestCreateUsersWithArrayInputOperationOnSendingRequestCreateUsersWithArrayInputOperationSenderInterface
    {

		void SendRequest_CreateUsersWithArrayInputOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_CreateUsersWithArrayInputOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_CreateUsersWithArrayInputOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateCreateUsersWithListInputHttpRequestCreateUsersWithListInputOperationOnSendingRequestCreateUsersWithListInputOperationSenderInterface
    {

		void SendRequest_CreateUsersWithListInputOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_CreateUsersWithListInputOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_CreateUsersWithListInputOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateLoginUserHttpRequestLoginUserOperationOnSendingRequestLoginUserOperationSenderInterface
    {

		void SendRequest_LoginUserOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_LoginUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_LoginUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateLogoutUserHttpRequestLogoutUserOperationOnSendingRequestLogoutUserOperationSenderInterface
    {

		void SendRequest_LogoutUserOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_LogoutUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_LogoutUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateGetUserByNameHttpRequestGetUserByNameOperationOnSendingRequestGetUserByNameOperationSenderInterface
    {

		void SendRequest_GetUserByNameOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_GetUserByNameOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_GetUserByNameOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateUpdateUserHttpRequestUpdateUserOperationOnSendingRequestUpdateUserOperationSenderInterface
    {

		void SendRequest_UpdateUserOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_UpdateUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_UpdateUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

    public interface ICreateDeleteUserHttpRequestDeleteUserOperationOnSendingRequestDeleteUserOperationSenderInterface
    {

		void SendRequest_DeleteUserOperation(Context context, XComponent.Common.Event.DefaultEvent transitionEvent, string privateTopic = null);

		void ReceiveSuccess_DeleteUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.SuccessResponse transitionEvent, string privateTopic = null);

		void ReceiveError_DeleteUserOperation(Context context, XComponent.SwaggerPetstore.UserObject.ErrorResponse transitionEvent, string privateTopic = null);


		void SendEvent(XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(StdEnum stdEnum, XComponent.Common.Event.DefaultEvent evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.SuccessResponse evt);

		void SendEvent(XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

		void SendEvent(StdEnum stdEnum, XComponent.SwaggerPetstore.UserObject.ErrorResponse evt);

    }

}